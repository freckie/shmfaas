apiVersion: v1
kind: ServiceAccount
metadata:
  name: shmfaas-scheduler
  namespace: shmfaas

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: shmfaas-scheduler-cr-configmaps
  namespace: shmfaas
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: shmfaas-scheduler-cr-storages
  namespace: shmfaas
rules:
- apiGroups: ["storage.k8s.io"]
  resources: ["csinodes", "csidrivers", "csistoragecapacities"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shmfaas-scheduler-crb-ks
subjects:
- kind: ServiceAccount
  name: shmfaas-scheduler
  namespace: shmfaas
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shmfaas-scheduler-crb-vs
subjects:
- kind: ServiceAccount
  name: shmfaas-scheduler
  namespace: shmfaas
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shmfaas-scheduler-crb-configmaps
subjects:
- kind: ServiceAccount
  name: shmfaas-scheduler
  namespace: shmfaas
roleRef:
  kind: ClusterRole
  name: shmfaas-scheduler-cr-configmaps
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shmfaas-scheduler-crb-storages
subjects:
- kind: ServiceAccount
  name: shmfaas-scheduler
  namespace: shmfaas
roleRef:
  kind: ClusterRole
  name: shmfaas-scheduler-cr-storages
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: shmscoring-config
  namespace: shmfaas
data:
  shmscoring-config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta3
    kind: KubeSchedulerConfiguration
    clientConnection:
      kubeconfig: /etc/kubernetes/scheduler.conf
    profiles:
    - schedulerName: shmfaas-scheduler
      plugins:
        score:
          enabled:
          - name: ShmScoring
          disabled:
          - name: "*"
        multiPoint:
          disabled:
          - name: "CapacityScheduling"
          - name: "Coscheduling"
          - name: "NodeResourcesAllocatable"
          - name: "NodeResourceTopologyMatch"
          - name: "PreemptionToleration"
          - name: "Trimaran"
          - name: "CrossNodePreemption"
          - name: "PodState"
      pluginConfig:
      - name: ShmScoring
        args:
          targets:
          - nodeName: dnclab3
            ip: 192.168.0.4
            port: "30000"
          - nodeName: dnclab4
            ip: 192.168.0.5
            port: "30000"
          - nodeName: dnclab5
            ip: 192.168.0.6
            port: "30000"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: scheduler
    tier: control-plane
  name: shmfaas-scheduler
  namespace: shmfaas
spec:
  selector:
    matchLabels:
      component: scheduler
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        version: second
    spec:
      serviceAccountName: shmfaas-scheduler
      containers:
      - command:
        - kube-scheduler
        - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
        - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
        - --bind-address=0.0.0.0
        - --config=/etc/kubernetes/shmfaas-scheduler/shmscoring-config.yaml
        - --kubeconfig=/etc/kubernetes/scheduler.conf
        - --secure-port=10260
        - --leader-elect=false
        image: ghcr.io/freckie/shmfaas-scheduler:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10260
            scheme: HTTPS
          initialDelaySeconds: 15
        name: shmfaas-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10260
            scheme: HTTPS
        resources:
          requests:
            cpu: 100m
        securityContext:
          privileged: false
        volumeMounts:
          - name: kubeconfig-volume
            mountPath: /etc/kubernetes/scheduler.conf
            readOnly: true
          - name: config-volume
            mountPath: /etc/kubernetes/shmfaas-scheduler
            readOnly: true
      hostNetwork: true
      hostPID: false
      priorityClassName: system-node-critical
      volumes:
        - name: kubeconfig-volume
          hostPath:
            path: /etc/kubernetes/scheduler.conf
            type: FileOrCreate
        - name: config-volume
          configMap:
            name: shmscoring-config
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
